@{
    Layout = null;
    ViewData["Title"] = "地图";
}
<script src="~/lib/jquery-2.0.3/jquery-2.0.3/jquery-2.0.3.min.js"></script>
<link href="~/lib/bootstrap-3.0.3-dist/dist/css/bootstrap.min.css" rel="stylesheet" />
<script src="~/lib/bootstrap/dist/js/bootstrap.js"></script>
<script src="~/lib/bootstrap-treeview/bootstrap-treeview.js"></script>
<script src="~/js/Cesium.js"></script>
<link href="~/lib/Cesium/Widgets/widgets.css" rel="stylesheet" />
<script src="~/js/lib/require.min.js"></script>
<script src="~/js/index.js"></script>
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignManager;

<nav role="navigation" class="navbar bg-dark " style="background:black;margin-bottom:0px">
    <div class="container-fluid">
        <a class="navbar-brand " asp-area="" asp-controller="Home" asp-action="Index">南京信息工程大学</a>
        <div class="navbar-right" style="margin:20px">
            <ul class="list-unstyled list-inline">
                @*<li class="nav-item col-3">
                        <a class="nav-link text-light" asp-area="" asp-controller="Home" asp-action="Index">首页</a>
                    </li>*@
                <li class="nav-item">
                    <a class="nav-link text-light" asp-area="" asp-controller="Home" asp-action="Privacy">隐私</a>
                </li>
                @if (SignManager.IsSignedIn(User))
                {
                    <li class="nav-item">
                        <a asp-controller="Account" class="nav-link text-light" asp-action="Logout">登出</a>
                    </li>
                    <li class="nav-item ">
                        <a class="nav-link text-light" asp-area="" asp-controller="User" asp-action="Index">用户管理</a>
                    </li>
                    <li class="nav-item ">
                        <a class="nav-link text-light" asp-area="" asp-controller="Role" asp-action="Index">角色管理</a>
                    </li>
                }
            </ul>
        </div>
    </div>
</nav>


<div class="col-sm-4" style="position:absolute; z-index:2 ;right:20px;width:300px">
    <div class="input-group">
        <input type="text" class="form-control" onkeydown="onKeyDown(event)" />
        <span class="input-group-addon" "><i class="glyphicon glyphicon-search"></i></span>
    </div>
</div>

<div style="position:absolute; z-index:1;">

    <div class="container-sm bg-transparent">
            <div id="treeview-checkable" class="bg-light bg-transparent"></div>

            <div id="checkable-output" class="bg-secondary" style="background-color:aqua"></div>

        </div>
</div>

<div id="cesiumContainer">
    <div style="position:absolute; z-index:3">
    </div>
</div>

    <script type="text/javascript">
       var viewer=init(Cesium);
        $(function () {

        var defaultData = [
            {
            id: "1",
        text: '栅格数据',
        href: '#parent1',
        tags: ['4'],
        nodes: [
                    {
            text: 'DEM',
                href: 'http://10.1.102.16:9000/terrain/6b398ba01fb011ea8bf36705383ddc78',
        tags: ['2']
    },
                    {
            text: 'DSM',
                href:'http://localhost:9000/terrain/f8ad0a00213311ea938af100420ea8d1',
        tags: ['0']
    }
]
},
            {
            text: '南京信息',
        href: '#parent2',
        tags: ['0']
    },
            {
            text: '水体模型',
        href: '#parent3',
        tags: ['0']
    },
            {
            text: '图斑',
        href: '#parent4',
        tags: ['0']
    },
            {
            text: '不动产',
        href: '#parent5',
        tags: ['0']
    }
];

var alternateData = [
            {
            text: 'Parent 1',
        tags: ['2'],
        nodes: [
                    {
            text: 'Child 1',
        tags: ['3'],
        nodes: [
                            {
            text: 'Grandchild 1',
        tags: ['6']
    },
                            {
            text: 'Grandchild 2',
        tags: ['3']
    }
]
},
                    {
            text: 'Child 2',
        tags: ['3']
    }
]
},
            {
            text: 'Parent 2',
        tags: ['7']
    },
            {
            text: 'Parent 3',
        icon: 'glyphicon glyphicon-earphone',
        href: '#demo',
        tags: ['11']
    },
            {
            text: 'Parent 4',
        icon: 'glyphicon glyphicon-cloud-download',
        href: '/demo.html',
        tags: ['19'],
        selected: true
    },
            {
            text: 'Parent 5',
        icon: 'glyphicon glyphicon-certificate',
        color: 'pink',
        backColor: 'red',
        href: 'http://www.tesco.com',
        tags: ['available', '0']
    }
];

var json = '[' +
            '{' +
            '"text": "Parent 1",' +
        '"nodes": [' +
            '{' +
            '"text": "Child 1",' +
        '"nodes": [' +
            '{' +
            '"text": "Grandchild 1"' +
        '},' +
            '{' +
            '"text": "Grandchild 2"' +
        '}' +
        ']' +
        '},' +
            '{' +
            '"text": "Child 2"' +
        '}' +
        ']' +
        '},' +
            '{' +
            '"text": "Parent 2"' +
        '},' +
            '{' +
            '"text": "Parent 3"' +
        '},' +
            '{' +
            '"text": "Parent 4"' +
        '},' +
            '{' +
            '"text": "Parent 5"' +
        '}' +
        ']';


        var $checkableTree = $('#treeview-checkable').treeview({
            data: defaultData,
        showIcon: false,
        showCheckbox: true,
            onNodeChecked: function (event, node) {
                console.log("当前选中",node);
                
                
            $('#checkable-output').prepend('<p>' + node.text + ' was checked</p>');
        },
            onNodeUnchecked: function (event, node) {
                console.log("当前未选中",event,node);
               
            $('#checkable-output').prepend('<p>' + node.text + ' was unchecked</p>');
        }
    });

        var findCheckableNodess = function () {
            return $checkableTree.treeview('search', [$('#input-check-node').val(), {ignoreCase: false, exactMatch: false }]);
    };
    var checkableNodes = findCheckableNodess();

    // Check/uncheck/toggle nodes
        $('#input-check-node').on('keyup', function (e) {
            checkableNodes = findCheckableNodess();
        $('.check-node').prop('disabled', !(checkableNodes.length >= 1));
    });

        $('#btn-check-node.check-node').on('click', function (e) {
            $checkableTree.treeview('checkNode', [checkableNodes, { silent: $('#chk-check-silent').is(':checked') }]);
        });

        $('#btn-uncheck-node.check-node').on('click', function (e) {
            $checkableTree.treeview('uncheckNode', [checkableNodes, { silent: $('#chk-check-silent').is(':checked') }]);
        });

        $('#btn-toggle-checked.check-node').on('click', function (e) {
            $checkableTree.treeview('toggleNodeChecked', [checkableNodes, { silent: $('#chk-check-silent').is(':checked') }]);
        });

        // Check/uncheck all
        $('#btn-check-all').on('click', function (e) {
            $checkableTree.treeview('checkAll', { silent: $('#chk-check-silent').is(':checked') });
        });

        $('#btn-uncheck-all').on('click', function (e) {
            $checkableTree.treeview('uncheckAll', { silent: $('#chk-check-silent').is(':checked') });
        });

    });


    function onKeyDown(event) {
        var e = event || window.event || arguments.callee.caller.arguments[0];
        if (e && e.keyCode == 27) { // 按 Esc
            //要做的事情
        }
        if (e && e.keyCode == 113) { // 按 F2
            //要做的事情
        }
        if (e && e.keyCode == 13) { // enter 键
            alert("此处回车触发搜索事件");
        }
    }
</script>


